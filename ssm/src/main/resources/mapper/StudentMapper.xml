<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoshu.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="com.xiaoshu.entity.Student">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="sid" jdbcType="INTEGER" property="sid" />
    <result column="sname" jdbcType="VARCHAR" property="sname" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="hobby" jdbcType="VARCHAR" property="hobby" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="maid" jdbcType="INTEGER" property="maid" />
  </resultMap>
  
  
    <resultMap id="query_all" type="com.xiaoshu.entity.Student">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="sid" jdbcType="INTEGER" property="sid" />
    <result column="sname" jdbcType="VARCHAR" property="sname" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="hobby" jdbcType="VARCHAR" property="hobby" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="maid" jdbcType="INTEGER" property="maid" />
    <association property="major" javaType="com.xiaoshu.entity.Major">
	    <id column="maid" jdbcType="INTEGER" property="maid" />
	    <result column="maname" jdbcType="VARCHAR" property="maname" />
    
    </association>
  </resultMap>
  
  
  <select id="findAll" parameterType="com.xiaoshu.entity.Student" resultMap="query_all">
  
  	select * from student s , major m where s.maid=m.maid
  	<if test="sname!=null and sname!=''">
  		and s.sname like '%${sname}%'
  	</if>
  	<if test="maid!=0 and maid!=null">
  		and s.maid=#{maid}
  	</if>
  	<if test="startTime!=null">
  		and birthday &gt;=#{startTime}
  	</if>
  	<if test="endTime!=null">
  		and birthday &lt;=#{endTime}
  	</if>
  	order by s.sid
  	
  </select>
  
  <select id="findStudentBySname" parameterType="String" resultType="com.xiaoshu.entity.Student">
  
  	select * from student where sname=#{sname}
  	
  </select>
  
  
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    sid, sname, sex, hobby, birthday, maid
  </sql>
  
  <select id="findMajorVO" resultType="com.xiaoshu.entity.MajorVO">
  	select m.maname,count(sid) ct from student s right join major m on s.maid=m.maid group by m.maid
  </select>

</mapper>